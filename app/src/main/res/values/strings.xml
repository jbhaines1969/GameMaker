<resources>

    <!-- New Game Screen Strings -->

    <string name="app_name">GameMaker</string>
    <string name="newGameIntroText">Enter a name for your game, and select the type.</string>
    <string name="gameName">Game Name</string>
    <string name="newGameSaveButtonText">Continue</string>
    <string name="gameDescriptionSaveButton">Save and Continue</string>
    <string name="SaveButton">Save</string>
    <string name="game_already_exists">A Game with this name already exists. Do you want to overwrite it?</string>
    <string name="yes">Yes</string>
    <string name="no">No</string>
    <string name="choose_name_for_game">Please choose a name for this game. \"New Game\" is not allowed.</string>

    <!-- List Selector Screen Strings -->

    <string name="btnTextAttributes">Attributes</string>
    <string name="btnTextRaces">Races</string>
    <string name="btnTextClasses">Classes</string>
    <string name="btnTextSkills">Skills</string>
    <string name="btnTextTraits">Traits</string>
    <string name="btnTextFeatures">Features</string>
    <string name="lblListSelectIntro">Select a Characteristic Group to work on</string>
    <string name="dialog_delete_list_item">Do you want to delete the selected item?</string>
    <string name="cancel">Cancel</string>
    <string name="delete">Delete</string>

    <!-- List Editor Screen Strings -->

    <string name="btnAdd">Add</string>
    <string name="lblTextGroup">Group</string>

    <!-- ClassGame Type Spinner Array -->

    <string-array name="GameTypes">
        <item>Fantasy</item>
        <item>Sci-Fi</item>
        <item>Military</item>
        <item>Mixed</item>
    </string-array>

    <string-array name="AttCreationMethods">
        <item>Straight Dice</item>
        <item>Dice minus Lowest Roll</item>
        <item>Point Assignment</item>
        <item>Base Points</item>
        <item>Dice + Base</item>
        <item>Dice + Point Assignment</item>
        <item>Base + Point Assignment</item>

    </string-array>

    <string-array name="HealthCreationMethods">
        <item>Dice Roll</item>
        <item>Attribute</item>
        <item>Accessory</item>
    </string-array>

    <string-array name="AdvancementMethods">
        <item>Character Levels</item>
        <item>Spending Experience on Abilities</item>
        <item>Event Based or GM Discretion</item>
    </string-array>


    <!-- Description Screen Strings -->

    <string name="CharacteristicDescriptionHint">Enter Description</string>
    <string name="GameDescriptionHint">Enter Game Description</string>


    <!-- Race Movement Screen Strings -->

    <string name="race_movement_intro_text">Enter the base movement speed for each Movement type.</string>
    <string name="lblWalk">Walking</string>
    <string name="lblRun">Running</string>
    <string name="lblSwim">Swimming</string>
    <string name="lblFly">Flying</string>

    <!-- Race Editor Screen Strings -->

    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="lblRace">Race</string>
    <string name="description">Description</string>
    <string name="movement">Movement</string>
    <string name="allowed_classes">Allowed Classes</string>
    <string name="features_possessed">Features Possessed</string>
    <string name="racial_traits">Racial Traits</string>
    <string name="class_traits">Class Traits</string>
    <string name="known_skills">Known Skills</string>
    <string name="attribute_modifiers">Attribute Modifiers</string>

    <!-- Class Editor Screen Strings -->

    <string name="base_points">Base Points</string>
    <string name="point_levels">Point Levels</string>
    <string name="minimum_attributes">Minimum Attributes</string>
    <string name="attribute_requirements">Attribute Requirements</string>
    <string name="skills">Skills</string>
    <string name="traits">Traits</string>
    <string name="features">Features</string>
    <string name="class_base_points_instructions">Enter the base points for a newly created character</string>
    <string name="level_points_instructions">Enter the levels needed to gain new points, and the points gained for each Characteristic</string>
    <string name="attributes">Attributes</string>
    <string name="class_text">Class</string>
    <string name="levels_for_skills">Levels for Skills</string>
    <string name="skill_points">Skill Points</string>
    <string name="instructions">Instructions</string>
    <string name="characteristic">Characteristic</string>
    <string name="levels">Levels</string>
    <string name="points">Points</string>
    <string name="edit_name">Edit Name and Type</string>
    <string name="edit_description">Edit Description</string>
    <string name="edit_characteristics">Edit Characteristics</string>
    <string name="attribute_creation">Attribute Creation</string>
    <string name="game">Game</string>
    <string name="game_description">Game Description</string>
    <string name="name">Name</string>
    <string name="straight_dice">Straight Dice</string>
    <string name="dice_minus_lowest_roll">Dice minus lowest roll</string>
    <string name="dice_plus_points">Dice + Points</string>
    <string name="base_plus_dice">Base + Dice</string>
    <string name="assign_points">Points to Assign</string>
    <string name="base_plus_points">Base + Point Assignment</string>
    <string name="base_scores_only">Base Scores Only</string>
    <string name="base_dice_points">Base + Dice + Points</string>
    <string name="select_attribute_creation_method">Select Attribute Creation Method</string>
    <string name="points_available">Points Available:\u0020</string>
    <string name="base_attribute_points">Base Attribute Points:\u0020</string>
    <string name="how_many_sides_per_dice">Dice Sides</string>
    <string name="how_many_rolls">Dice Rolls</string>
    <string name="choose_file">Choose Game to Edit</string>
    <string name="open">Open</string>
    <string name="click_item_to_edit">Click item to edit</string>
    <string name="add">Add</string>
    <string name="level_names">Level Names</string>
    <string name="minimum_points">Minimum Points</string>
    <string name="maximum_points">Maximum Points</string>
    <string name="level">Level</string>
    <string name="class_name">Class</string>
    <string name="races">Races</string>
    <string name="classes">Classes</string>
    <string name="close_text">Close</string>
    <string name="new_game">New Game</string>
    <string name="edit_game">Edit Game</string>
    <string name="delete_game">Delete Game</string>
    <string name="share_game">Share Game</string>
    <string name="select_health_creation_method">Select Health Type Method</string>
    <string name="health_type_creation">Health Type Creation</string>
    <string name="modified_by_characteristics">Modified by Attributes</string>
    <string name="health_creation_modified_text">Using this method, the characters health/damage points will be determined by equipment. Check Modified if this score will be modified by Attribute Scores</string>
    <string name="attributes_for_health">Select Attributes</string>
    <string name="input_modifiers">Input Modifiers</string>
    <string name="health_attribute_multiplier">Attribute Multiplier</string>
    <string name="attribute_additive">Attribute Additive</string>
    <string name="health_dice_sides">Health Dice Sides</string>
    <string name="advancement_method">Advancement Method</string>
    <string name="preferred_classes">Preferred Classes</string>
    <string name="preferred_races">Preferred Races</string>
    <string name="effect_type">Effect Type</string>
    <string name="skill_name">Skill Name</string>
    <string name="adv_method_level_based_text">Use Class Editor to set point gains per Character Level</string>
    <string name="point_cost">Point Cost</string>
    <string name="ability_type">Ability Type</string>
    <string name="preferred_points">Preferred Points</string>
    <string name="non_preferred_penalty">Non-Preferred Penalty</string>
    <string name="cost_multiplier">Cost Multiplier</string>
    <string name="max_level">Max Level</string>
    <string name="info">\?</string>
    <string name="choose_advancement_method">Choose Advancement Method</string>
    <string name="health_creation_dice_message_text">Use the Class Editor section to set health point dice</string>


    <!-- info screen strings -->

    <string name="advancement_method_info">Character Levels: Select this method when characters will gain ability points
    or abilities at specific levels of experience gain.\n
        Example:  1000 exp. points = level 2. 2000 = level 3. \n\n

    Spending Experience Points on Abilities:  This method is used when player experience is gained directly as spendable ability points.\n
        Example: Character completes mission, gains one point to spend on skills, and one to spend on traits.
    \n\n

        Event Based:  Choose this method when ability advancement is triggered by in game events, or at the discretion of the Game Master.
    \nExample:  Character picks lock 100 times successfully, pick lock skill advances to next level.
        \nAlternatively, Game Master determines Character has practiced lockpicking sufficiently, and awards an advancement to the skill. \n\n

        Point Cost:  Amount of ability points necessary to gain the initial level of the skill. \n\n

        Non-Preferred Penalty:  Amount of extra points necessary for a non-preferred class or race to gain or advance a skill. Use the Skill
        editor screen to set preferred classes and races.
        If 0, all classes and races will spend the same amount to advance a skill.\n\n

        Cost Multiplier:  Cost to advance an ability or attribute after the initial point.  If zero, all advancement is at the same cost,
        otherwise the new level will cost as many points as the current level times the mulitiplier.
        \n Example:  Multiplier of one will cost three points to go from level three to level four, and four points to go from level four to level five. \n\n

        Max Level:  Sets the highest level abilities can reach.  If zero, abilities will have no upper limit.  If one, they are either
        possessed or not possessed.
    </string>

    <string name="att_creation_info_base">Sets the rules by which Character Attributes will be created.\n\n
    Straight Dice:  Players roll a number of dice, add the results, and the total is the Attribute score.\n\n

    Dice Minus Lowest Roll:  Players roll the number of dice needed to create the Attribute, plus one extra roll,
    add all results and subtract the lowest roll.\n\n

    Point Assignment:  Players are given a set number of points, and assign points to the Attributes until no points remain\n\n

    Base Points: All Attributes start at a base number of points.  Advancement points are gained through experience.\n\n

    Dice + Base:  All Attributes start at a base number of points, and dice results are added to the base for each attribute.\n\n

    Dice + Point Assignment:  Players roll dice for each attribute, and get a number of additional points to assign to the results.\n\n

    Base + Point Assignment:  All Attributes start at a base number, and players get a number of points to assign to attributes
    until no points remain.</string>

    <string name="health_creation_info">Set method for determining how much damage a character can take. \n\n

    Dice Roll:  Player will roll dice to determine character health.  Use the Class editor screens to set Dice sides
    and number of rolls used to determine health.\n\n

    Attribute:  Health is determined by Attribute scores, either a single Attribute or a sum of Attributes.  Select which Attributes
    will be added to the total using the Attribute List.\n\n
    Multiplier:  Sum of Attributes will be multiplied by this number to determine health points.\n\n
    Additive:  This will be added to health score after multiplier is applied.\n\n

    Accessory:  Health will be determined by equipment/accessories in game.\n
    Example:  A space opera where play always takes place in a ship would use ship\'s armor and shield ratings to determine how
    much damage the player could take.\n
    Use Attribute list if Attributes will modify the health rating in this case.</string>

    <string name="game_edit_info">Name:  Edit Game Name, Description, and Type\n\n

    Characteristics:  Use these screens to edit character specific qualities, such as races, classes, and abilities\n\n

    Attribute Creation:  Attributes make up the core abilities of characters. Use this section to specify the method
    used to determine a character\'s attribute scores.\n\n

    Health Type Creation:  Use this section to set up rules for determining the damage a character is able to take.\n\n

    Advancement Method:  Set the method of character progression, and the costs for ability advancement.</string>

    <string name="list_selector_info">Select the Characteristic you wish to work on, and add items to the Characteristic
    list.  Select an item in the list to edit that item. Use the Help (?) button to get item specific help.\n\n</string>

    <string name="attribute_list_info">Attributes are the core abilities of characters, an inherent set of qualities
    that all characters share.  They are often used to determine success in actions, give bonuses to outcomes, or set
    limits to other abilities.  You should create only attributes which will have real effects in your game.\n\n
    Example:  A game based on physical combat might use Strength and Agility, while a game based on aircraft dogfights
    would not need to know Character strength, but might need Reflex Speed and Spatial Awareness as attributes.</string>

    <string name="race_list_info">Races each have their own strengths and weaknesses, and can be used to enhance roleplay
    as well as determining starting skills and backgrounds for characters.\n\n</string>

    <string name="class_list_info">Classes are the professions a character can take on, and the skills and bonuses,
    as well as weaknesses, reflect the training and experiences the character has recieved for that role.</string>

    <string name="skill_list_info">Skills are the list of abilities which require a process to complete.  Skills are usually
    learned, either through lessons or through diligent practice, although in some cases natural talent is as good as learning.\n\n

        Skills also include knowledges, such as extra languages spoken, or a background in ancient history.\n\n
    Skills might modify other game events (such as acrobatic skills modifying falling damage), but they also have
    success outcomes of their own (such as checking against the acrobatic skill to successfully tumble after a dodge, and come up
        ready to strike).\n\n
        The main aspect to keep in mind in determining if an ability fits in the Skill set is whether or not it is a process
        that takes time to achieve a final result when using the skill for its own sake.\n\n
        Skill levels will act as either bonuses to success chances, increased quality of produced materials, or additional
        options available to the character using the skill.\n\n
    Examples:\n
        Painting (additional levels could increase quality of painting, or add mediums the artist is
        capable of working in)\n
        Auto-Mechanics(additional levels could add to the types of engines/vehicles the character can
        work on, decrease time for diagnostics, etc.)\n
        Driving\n
        Wall-Climbing</string>

    <string name="trait_list_info">Traits are characteristics and abilities which are either always on, or have instant effects when
    a situation calls on them.  Traits can be developed through training, natural qualities the character possesses,
    or, in some games, granted by objects the character possesses.\n\n
        Traits can be detrimental as well as beneficial.  Near-Sightedness would be a Trait,
        just as Perfect Vision would be. In these cases, a Game Master could include a negative cost to the Trait, and allow
        players to gain extra Trait points to spend by selecting a few detrimental characteristics.\n\n
        Included in this group would be any racial characteristics the game includes. If the game includes a race that
        can see in the dark, then "Night Sight" would be included in the trait list, but might only be usable by that race
        or by characters who gain it through objects or other game events.\n\n
    Traits generally act as modifiers to game events or success checks, and have no significant outcome of their own.\n\n

        Examples:\n
        Quick-Draw might reduce the reaction time penalty for drawing or changing weapons during combat\n
        Night-Sight would reduce or eliminate penalties for operating in low light conditions.\n
        Truth-Sense could allow a character a success check to realize they are being lied to.\n
        Near-Sightedness might give a penalty to success checks to notice concealed items.
    </string>

    <string name="feature_list_info">Features are abilities or conditions that are granted to the character
    which are not natural to the game world.  They generally share the qualities of Traits, being either always on
    or requiring no significant time to use, although they could include Skill-like abilities which require a process to
        utilize.\n\n
        Common origins include abilities granted by powerful magical or divine beings,
    special objects, or traits which are so rare as to be considered supernatural or paranormal.\n\n
    Features tend to have powerful game effects, and are often limited in some way, such as having a maximum amount of usages per day or week, only
    being usable under certain conditions, or any number of other limitations which keep them from overbalancing the
    game.\n\n
    Like Traits, Features can be detrimental as well as beneficial, or both at the same time (think powerful curses, or
    clairvoyance that leaves the character weak and disoriented for a period of time after use)\n\n

    Examples:\n
        Flaming Breath might allow the character to spit fire once a day.\n
    Lunar Strength might give a player a bonus to physical strength in direct moonlight\n
    Material Weakness (with selected material) might make a character practically powerless against
    a particular object or material.</string>

    <string name="attribute_description_info">Edit the name and description for this Attribute.
    Include any information necessary for a player to understand the role of this Attribute
    in gameplay, and any modifications to game mechanics it affects.</string>

    <string name="skill_description_info">Edit the name and description for this Skill.
    Include requirements for successfully using the Skill, time required to use the Skill, and
    the effects of success.  Also include any modifications to those effects at different Skill
    levels, if your game uses them.</string>

    <string name="race_description_info">Edit the name and description for this Race. Include
    information such as preferred habitat, general racial philosophies and behaviors, and any
    other information a player would need to successfully roleplay a member of this race.
    Also include any special characteristics not covered by racial traits or skills, such as
    \"immune to fear effects\", or \"can breed hybrids with other races\" (include races)</string>

    <string name="trait_description_info">Edit the name and description for this Trait.
        Include the gameplay effects and modifications of the Trait, and the requirements
        for successful use of the Trait if it is not \"always on"\, and the modifications or
    effects on gameplay of success (and failure, if necessary).  Also include any modifications
    to the effects at different Trait levels, if your game uses them.</string>

    <string name="feature_description_info">Edit the name and description for this Feature.
    Include the effects and modifications of this Feature, and the requirements for successful use
    if it is not \"always on"\.  Also include any limitations to this Feature or its use,
    and the effects of higher levels of the Feature if your game uses them.</string>

    <string name="race_movement_info">Enter the distance in base game units that a character of this Race
        can move in one action round when unencumbered and moving freely, for each movement type.</string>

    <string name="race_allowed_classes_info">Many games limit the Class/Profession choices of certain Races. Use this
    area to choose which Classes will be allowed to this Race.  Leaving all Classes unselected will allow this Race to choose any
    Class.</string>

    <string name="race_skills_info">Use this screen to select any Skills which are commonly known to members of this Race.
        These reflect the conditions under which members of the Race are raised, and cost no ability points for initial levels.\n\n
    Examples might include Mountaineering for a Race which lives in mountains,
        or a race of forest people which learn Foraging as a matter of course. </string>

    <string name="race_traits_info">Use this screen to select any Traits which are commonly known to members of this Race.\n\n
    Examples might include a race of tree dwellers which are inherently Ambidextrous, or a Water Breathing undersea race.</string>

    <string name="race_att_mods_info">Races each have their own strengths and weaknesses.  Use this section to
    set any bonuses or negatives this Race will have to core Attribute scores.</string>

    <string name="race_att_req_info">Many games set limits to the core Attributes for certain races, such as small
    tree dwellers having a maximum Strengh rating (due to size), or a monstrous race being limited in Intelligence (reflecting
    their barbaric nature and distrust of arcane knowledge).\n\n

    Use this screen to set upper and lower limits for Attributes for this race.</string>

    <string name="class_description_info">Edit name and enter a basic description for this Class, including background, role
    in the game, and standard expectations of the Class within the game world</string>

    <string name="class_start_points_info">Use this screen to set the number of starting spendable ability points a player
    has when creating a new character, for each ability type.  If using a single point pool for all abilities, set how many total points
    new characters of this class start with.</string>

    <string name="class_level_points_info">If using the Character Levels advancement method, these will be the points earned by
    characters of this class upon advancing to new levels. If left at zero, the character will
        not gain points for that Characteristic upon leveling.\n\n

        Use the \"General\" box if the Character gains points which may be spent in any Characteristic.

        Some abilities may gain points every level, while others may only advance after a certain number of levels have been reached.\n\n

    Points:  Number of points gained at each advancement level.\n\n

    Levels:  How many levels are needed to gain advancement points.</string>

    <string name="class_skills_info">Select the Skills which are common to all members of this Class. These reflect the
    training and experiences of those in this profession, and cost no ability points for initial levels.</string>

    <string name="class_traits_info">Select the Traits which are common to all members of this Class. These reflect both
    experience and training, as well as qualities which might be required to be recruited into this profession.\n\n

    Examples:\n\n

    All members of the Sharpshooter Class might have Steady Hands as a Trait, giving a bonus to aiming actions.</string>

    <string name="class_att_req_info">Many Classes have minimum required attributes in order to be successful in that profession.
    A college professsor won\'t do very well if he\'s of very low intelligence, and an easily distracted person does not make
    a good bomb-technician.  Use this screen to set the minimum Attribute scores necessary to choose this Class.</string>

    <string name="class_level_names_info">Purely optional, Level Names often have no real effect on game mechanics, but can add an
    extra layer of depth to roleplay.  Use this section to set the titles by which characters of a particular rank are known.
    /n/n
    These ranks can be used to add a game element, if the game includes a heirarchy of command, such as in military scenarios or
    guild based games.</string>
    <string name="share">Share</string>
    <string name="delete_file">Choose Game to Delete</string>
    <string name="share_file">Choose Game to Share</string>


</resources>
